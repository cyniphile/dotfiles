// Place your key bindings in this file to override the defaults
[
    {
        "key": "cmd+h",
        "command": "workbench.action.navigateLeft",
        "when": "isMac"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.navigateRight",
        "when": "isMac"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.navigateUp",
        "when": "isMac"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.navigateDown",
        "when": "isMac"
    },
    {
        "key": "cmd+;",
        "command": "workbench.action.togglePanel",
        "when": "isMac"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel",
        "when": "isMac"
    },
    {
        "key": "cmd+e",
        "when": "!sideBarFocus && isMac",
        "command": "workbench.view.explorer"
    },
    {
        "key": "cmd+e",
        "when": "sideBarVisible && isMac",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus && isMac"
    },
    {
        "key": "ctrl+enter",
        "command": "-explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus && isMac"
    },
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus && isMac"
    },
    {
        "key": "cmd+down",
        "command": "-explorer.openAndPassFocus",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus && isMac"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "cmd+;",
        "when": "panelFocus && isMac",
        "command": "workbench.action.closePanel",
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "isMac"
    },
    {
        "key": "cmd+b right",
        "command": "workbench.action.positionPanelRight",
        "when": "isMac"
    },
    {
        "key": "cmd+left",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "panelFocus && isMac"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "cmd+right",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "panelFocus && isMac"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "cmd+up",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "panelFocus && isMac"
    },
    {
        "key": "ctrl+cmd+up",
        "command": "-workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "cmd+down",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "panelFocus && isMac"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "-workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "cmd+b left",
        "command": "workbench.action.positionPanelLeft",
        "when": "isMac"
    },
    {
        "key": "cmd+b down",
        "command": "workbench.action.positionPanelBottom",
        "when": "isMac"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus && isMac"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus && isMac"
    },
    {
        "key": "cmd+'",
        "command": "editor.action.toggleMinimap",
        "when": "isMac"
    },
    {
        "key": "cmd+b shift+l",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "cmd+b b",
        "command": "workbench.action.terminal.kill",
        "when": "isMac"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "cmd+h",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "alt+ctrl+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "cmd+6",
        "command": "workbench.action.navigateBack",
        "when": "isMac"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack",
        "when": "isMac"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor && isMac"
    },
    {
        "key": "cmd+k f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor && isMac"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus && isMac"
    },
    {
        "key": "cmd+m",
        "command": "code-runner.stop",
        "when": "isMac"
    },
    {
        "key": "ctrl+alt+m",
        "command": "-code-runner.stop",
        "when": "isMac"
    },
    {
        "key": "tab",
        "command": "selectNextQuickFix",
        "when": "editorFocus && quickFixWidgetVisible && isMac"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevQuickFix",
        "when": "editorFocus && quickFixWidgetVisible && isMac"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && isMac"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible && isMac"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor && isMac"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.nextSideBarView",
        "when": "sideBarFocus && isMac"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.previousSideBarView",
        "when": "sideBarFocus && isMac"
    },
    // windows
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "isWindows"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "isWindows"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "isWindows"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "isWindows"
    },
    {
        "key": "ctrl+;",
        "command": "workbench.action.togglePanel",
        "when": "isWindows"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel",
        "when": "isWindows"
    },
    {
        "key": "ctrl+e",
        "when": "!sideBarFocus && isWindows",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+e",
        "when": "sideBarVisible && isWindows",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "s",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus && isWindows"
    },
    {
        "key": "ctrl+enter",
        "command": "-explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus && isWindows"
    },
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus && isWindows"
    },
    {
        "key": "ctrl+down",
        "command": "-explorer.openAndPassFocus",
        "when": "explorerViewletFocus && explorerViewletVisible && !explorerResourceIsFolder && !inputFocus && isWindows"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+;",
        "when": "panelFocus && isWindows",
        "command": "workbench.action.closePanel",
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "isWindows"
    },
    {
        "key": "ctrl+b right",
        "command": "workbench.action.positionPanelRight",
        "when": "isWindows"
    },
    {
        "key": "ctrl+left",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "panelFocus && isWindows"
    },
    {
        "key": "ctrl+ctrl+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+right",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "panelFocus && isWindows"
    },
    {
        "key": "ctrl+ctrl+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "panelFocus && isWindows"
    },
    {
        "key": "ctrl+ctrl+up",
        "command": "-workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "panelFocus && isWindows"
    },
    {
        "key": "ctrl+ctrl+down",
        "command": "-workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+b left",
        "command": "workbench.action.positionPanelLeft",
        "when": "isWindows"
    },
    {
        "key": "ctrl+b down",
        "command": "workbench.action.positionPanelBottom",
        "when": "isWindows"
    },
    {
        "key": "ctrl+]",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus && isWindows"
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus && isWindows"
    },
    {
        "key": "ctrl+'",
        "command": "editor.action.toggleMinimap",
        "when": "isWindows"
    },
    {
        "key": "ctrl+b shift+l",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported && isWindows"
    },
    {
        "key": "ctrl+b ctrl+b",
        "command": "workbench.action.terminal.kill",
        "when": "isWindows"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.navigateBack",
        "when": "isWindows"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack",
        "when": "isWindows"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor && isWindows"
    },
    {
        "key": "ctrl+k f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor && isWindows"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus && isWindows"
    },
    {
        "key": "ctrl+m",
        "command": "code-runner.stop",
        "when": "isWindows"
    },
    {
        "key": "ctrl+alt+m",
        "command": "-code-runner.stop",
        "when": "isWindows"
    },
    {
        "key": "tab",
        "command": "selectNextQuickFix",
        "when": "editorFocus && quickFixWidgetVisible && isWindows"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevQuickFix",
        "when": "editorFocus && quickFixWidgetVisible && isWindows"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && isWindows"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible && isWindows"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor && isWindows"
    },
    {
        "key": "ctrl+]",
        "command": "workbench.action.nextSideBarView",
        "when": "sideBarFocus && isWindows"
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.previousSideBarView",
        "when": "sideBarFocus && isWindows"
    },
    {
        "key": "m",
        "command": "notebook.cell.joinBelow",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
    },
    {
        "key": "alt+win+j",
        "command": "-notebook.cell.joinBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus && isWindows"
    },
    {
        "key": "ctrl+enter",
        "command": "notebook.cell.execute",
        "when": "notebookCellListFocused && isWindows"
    },
    {
        "key": "cmd+enter",
        "command": "notebook.cell.execute",
        "when": "notebookCellListFocused && isMac"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-notebook.cell.execute",
        "when": "notebookCellListFocused"
    },
    {
        "key": "shift+g",
        "command": "notebook.focusBottom",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+end",
        "command": "-notebook.focusBottom",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "g g",
        "command": "notebook.focusTop",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+home",
        "command": "-notebook.focusTop",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "jupyter.gotoNextCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused && isWindows"
    },
    {
        "key": "cmd+j",
        "command": "notebook.focusNextEditor",
        "when": "notebookEditorFocused"
    },
    {
        "key": "cmd+k",
        "command": "notebook.focusPreviousEditor",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+]",
        "command": "-jupyter.gotoNextCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker && isWindows"
    },
    {
        "key": "ctrl+r",
        "command": "test-explorer.run-test-at-cursor",
        "when": "isWindows"
    },
    {
        "key": "cmd+r",
        "command": "test-explorer.run-test-at-cursor",
        "when": "isMac"
    },
    {
        "key": "ctrl+b s",
        "command": "projectManager.listProjects",
        "when": "isWindows"
    },
    {
        "key": "cmd+b s",
        "command": "projectManager.listProjects",
        "when": "isMac"
    },
    {
        "key": "shift+alt+p",
        "command": "-projectManager.listProjects"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+a",
        "command": "-extension.vim_ctrl+a",
        "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
    },
    {
        "key": "ctrl+c",
        "command": "-extension.vim_ctrl+c",
        "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
    },
    {
        "key": "backspace",
        "command": "-extension.vim_backspace",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Visual'"
    },
    {
        "key": "ctrl+0",
        "command": "git.revealInExplorer"
    },
    {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "cmd+d",
        "command": "python.selectAndDebugTestMethod"
    },
    {
        "key": "escape",
        "command": "-notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
    },
    {
        "key": "ctrl+b m",
        "command": "notebook.cell.insertMarkdownCellBelow",
        "when": "isWindows"
    },
    {
        "key": "cmd+b m",
        "command": "notebook.cell.insertMarkdownCellBelow",
        "when": "isMac"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-notebook.cell.split",
        "when": "config.jupyter.enableKeyboardShortcuts && editorTextFocus && inputFocus && notebookEditorFocused && notebookViewType == 'jupyter-notebook' && isMac"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "-notebook.focusNextEditor",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "shift+tab",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0012"
        },
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "cmd+n",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u000E"
        },
        "when": "terminalFocus && terminalProcessSupported && isMac"
    },
    {
        "key": "f2",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && isMac"
    },
    // see for codes https://www.techonthenet.com/unicode/chart.php
    {
        "key": "shift+cmd+-",
        "command": "notebook.cell.split",
        "when": "config.jupyter.enableKeyboardShortcuts && editorTextFocus && inputFocus && notebookEditorFocused && notebookType == 'jupyter-notebook'"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-notebook.cell.split",
        "when": "config.jupyter.enableKeyboardShortcuts && editorTextFocus && inputFocus && notebookEditorFocused && notebookType == 'jupyter-notebook'"
    },
    {
        "key": "tab",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inQuickOpen"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "cmd+enter",
        "command": "jupyter.runcurrentcell",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-jupyter.runcurrentcell",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "key": "cmd+d",
        "command": "test-explorer.debug-test-at-cursor"
    },
    {
        "key": "shift+cmd+l",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "shift+cmd+h",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "cmd+f12",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "cmd+f11",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "cmd+r",
        "command": "rust-analyzer.run",
        "when": "editorTextFocus"
    },
    {
        "key": "0 0",
        "command": "jupyter.restartkernel",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    }
]