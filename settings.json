{
    "files.autoSave": "afterDelay",
    "editor.fontSize": 14,
    "editor.wordWrap": "off",
    "vim.useCtrlKeys": true,
    "vim.useSystemClipboard": true,
    "vim.leader": ",",
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            // "when": "editorTextFocus && editorLangId == 'python'", not working
            "before": [
                "<leader>",
                "n"
            ],
            "commands": [
                "editor.action.marker.nextInFiles",
            ],
        },
        {
            // "when": "editorTextFocus && editorLangId == 'python'", not working
            "before": [
                "<leader>",
                "t"
            ],
            "after": [
                "A",
                " ",
                "escape"
            ],
            "commands": [
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "snippet": "\nimport ipdb; ipdb.set_trace()  # fmt: skip"
                    },
                }
            ],
        },
        {
            // "when": "editorTextFocus && editorLangId == 'python'", not working
            "before": [
                "<leader>",
                "i"
            ],
            "after": [
                "A",
                " ",
                "escape"
            ],
            "commands": [
                {
                    "command": "editor.action.insertSnippet",
                    "args": {
                        "snippet": "  # type: ignore"
                    },
                }
            ],
        },
        {
            "before": [
                "Y"
            ],
            "after": [
                "y",
                "$"
            ]
        },
        {
            "before": [
                "<leader>",
                "f"
            ],
            "commands": [
                "fountain-outline.focus",
            ],
        },
        // vim surround, type surround char after `s`
        {
            "before": [
                "s",
            ],
            "after": [
                "T",
                " ",
                "v",
                "t",
                " ",
                "S",
            ]
        },
        {
            "before": [
                "<Space>"
            ],
            "after": [
                // "f",
                // "\"",
                "A"
            ]
        },
        {
            "before": [
                "enter"
            ],
            "commands": [
                "editor.action.openLink"
            ],
        },
        {
            "before": [
                "<leader>",
                "b",
            ],
            "commands": [
                "editor.debug.action.toggleBreakpoint",
            ],
            "when": [
                "debuggersAvailable && editorTextFocus"
            ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "c"
            ],
            "commands": [
                "workbench.view.scm",
            ],
            "when": [
                "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor && vim.mode != 'Insert'"
            ]
        },
        {
            "before": [
                "<leader>",
                "g",
                "p"
            ],
            "commands": [
                "git.push",
            ],
            "when": [
                "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor && vim.mode != 'Insert'"
            ]
        },
        {
            "before": [
                "<leader>",
                "d"
            ],
            "commands": [
                "editor.action.peekDefinition",
            ],
            "when": [
                "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor && vim.mode != 'Insert'"
            ]
        },
        {
            "before": [
                "<leader>",
                "r"
            ],
            "commands": [
                "editor.action.rename",
            ],
            "when": [
                "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor && vim.mode != 'Insert'"
            ]
        },
        {
            "before": [
                "<leader>",
                "s"
            ],
            "commands": [
                // "editor.action.openLink"
                "editor.action.revealDefinition"
                // "editor.action.revealDefinitionAside",
            ],
            "when": [
                "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor && vim.mode != 'Insert'"
            ]
        },
        {
            "before": [
                "<leader>",
                "e"
            ],
            "commands": [
                "workbench.files.action.focusFilesExplorer",
            ],
            "when": [
                "editorTextFocus && vim.mode != 'Insert'"
            ],
        },
        {
            "before": [
                "u"
            ],
            "commands": [
                "undo"
            ]
        },
        {
            "before": [
                "k"
            ],
            "after": [
                "g",
                "k"
            ]
        },
        {
            "before": [
                "j"
            ],
            "after": [
                "g",
                "j"
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "s",
            ],
            "after": [
                "S",
            ]
        },
        {
            "before": [
                "u"
            ],
            "commands": [
                "undo"
            ]
        },
        {
            "before": [
                "y"
            ],
            "after": [
                "y",
                "g",
                "v",
            ]
        },
        {
            "before": [
                ">"
            ],
            "after": [
                ">",
                "g",
                "v",
            ]
        },
        {
            "before": [
                "<"
            ],
            "after": [
                "<",
                "g",
                "v",
            ]
        },
        {
            "before": [
                "<Space>"
            ],
            "after": [
                "$"
            ]
        },
        {
            "before": [
                "enter"
            ],
            "after": [
                "a",
                "f"
            ],
        },
        {
            "before": [
                "k"
            ],
            "after": [
                "g",
                "k"
            ]
        },
        {
            "before": [
                "j"
            ],
            "after": [
                "g",
                "j"
            ]
        }
    ],
    // Double tap `a` in insert mode to skip to end of word
    // useful for getting out of matched chars () or {}
    // might cause problems with words like "aardvark" ðŸ˜¢
    // Used `a+a` because kinda close of my already muscle-memorized 
    // pattern of `esc+w+a`
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "q",
                "q",
            ],
            "after": [
                "escape",
                "l",
                "a"
            ]
        },
        // if you mistyped a and hit delete immediately after, do nothing
        {
            "before": [
                "q",
                "delete",
            ],
            "after": []
        }
    ],
    "editor.suggestSelection": "first",
    "editor.formatOnSave": true,
    "terminal.external.linuxExec": "",
    "terminal.external.osxExec": "iterm",
    "python.languageServer": "Pylance",
    "workbench.statusBar.visible": true,
    // "customizeUI.titleBar": "inline",
    // "customizeUI.activityBar": "bottom",
    // hide top right icons
    // "customizeUI.stylesheet": {
    // ".actions-container[aria-label='Editor actions']": "display: none !important;"
    // },
    "search.exclude": {
        "**/*.ipynb_checkpoints": true,
        "**/*.venv": true
    },
    "cSpell.userWords": [
        "ACCELIGEN",
        "adenylated",
        "agritourism",
        "ahhh",
        "alloproteins",
        "amirite",
        "antivax",
        "arange",
        "Arby's",
        "archs",
        "asarray",
        "astype",
        "asymptoting",
        "autolog",
        "Awww",
        "axhline",
        "Badass",
        "ballcap",
        "barcoded",
        "barplot",
        "Baskin",
        "Belizeans",
        "Benihana",
        "Bijective",
        "Binarize",
        "Bioarxiv",
        "bioinformatics",
        "biomaterials",
        "biomolecular",
        "Biswas",
        "bitshifting",
        "bivariate",
        "bmatrix",
        "bokeh",
        "boldsymbol",
        "boxplot",
        "boxplots",
        "brainer",
        "buttholes",
        "bycatch",
        "Caicos",
        "catboost",
        "cdist",
        "Centricity",
        "ceviche",
        "ceviches",
        "CHEESESTEAK",
        "chisquare",
        "Cloverfield",
        "cluelessly",
        "coastals",
        "coef",
        "colab",
        "Collinearity",
        "Commandline",
        "convolutional",
        "corrcoef",
        "covariate",
        "Crackerbarrel",
        "creeped",
        "crescendoed",
        "crescendoing",
        "CRISPR",
        "croc",
        "Crocs",
        "Cronenberg",
        "CROWDMEMBER",
        "cuda",
        "cumsum",
        "cytometry",
        "cytomic",
        "Dask",
        "dataclass",
        "dataframe",
        "dataframes",
        "dawg",
        "deconvolution",
        "deduped",
        "dipshit",
        "disempowered",
        "displot",
        "douchey",
        "Dowmsampling",
        "Downsample",
        "downsampled",
        "dropna",
        "dtype",
        "Dunkin",
        "dups",
        "eigenbasis",
        "Eladio",
        "elif",
        "Elkhorn",
        "embedders",
        "empath",
        "Engineerable",
        "engineio",
        "Ensembled",
        "ensembling",
        "epigenetics",
        "Epigenome",
        "exhaustivity",
        "exomes",
        "explorative",
        "farmboy",
        "FASTA",
        "fatass",
        "featurization",
        "featurize",
        "Feinstein",
        "figsize",
        "fillna",
        "fixedrange",
        "flamegraph",
        "functools",
        "funders",
        "fundraise",
        "Garifuna",
        "gaslighted",
        "Gaussians",
        "Gleb",
        "gloopy",
        "GNNs",
        "govts",
        "grammarly",
        "Granarolo",
        "grandkids",
        "groupby",
        "guilting",
        "haha",
        "hascodecells",
        "havenativecells",
        "heatmaps",
        "heebeejeebees",
        "Hematoploetic",
        "Heyyy",
        "hget",
        "hincrby",
        "hiney",
        "hmset",
        "homeschooled",
        "Hortons",
        "hset",
        "huitlacoche",
        "hyperparam",
        "hyperparameters",
        "hyperparams",
        "idempotently",
        "iloc",
        "imshow",
        "ipdb",
        "ipykernel",
        "ipynb",
        "ipython",
        "ipywidgets",
        "isin",
        "isna",
        "itertools",
        "Jenn",
        "jizz",
        "joblib",
        "jupyter",
        "jupyterlab",
        "Kaggle",
        "Karp",
        "kickstarted",
        "Kimball",
        "knubs",
        "Kody",
        "lactamase",
        "Laticrete",
        "linalg",
        "linearities",
        "linewidth",
        "linreg",
        "linspace",
        "logits",
        "Logline",
        "logspace",
        "mandolina",
        "mathcal",
        "matplotlib",
        "MCMC",
        "meds",
        "Megakaryocyte",
        "mentees",
        "Messers",
        "mlflow",
        "MNIST",
        "Morty",
        "multicollinearity",
        "multimodal",
        "multiprocess",
        "multithreaded",
        "mypy",
        "nans",
        "nbinsx",
        "ndarray",
        "Nooo",
        "notna",
        "nout",
        "npyio",
        "numpy",
        "nunchucks",
        "nunique",
        "omics",
        "onesie",
        "operatorname",
        "optim",
        "Optuna",
        "Outro",
        "overfish",
        "overfished",
        "overfit",
        "Overfitting",
        "overnighting",
        "Owww",
        "Owwwwww",
        "papermill",
        "paratope",
        "pearsonr",
        "perfplot",
        "placencia",
        "placencians",
        "plotly",
        "Propecia",
        "Providenciales",
        "PTSD",
        "Pushback",
        "pvalue",
        "pyclass",
        "pyenv",
        "pyfunction",
        "pyplot",
        "pytest",
        "Pythonic",
        "Pythonistas",
        "Qdoba",
        "Quickstart",
        "Quizno's",
        "rainforest",
        "rearview",
        "rebalance",
        "Rebecca",
        "regplot",
        "relu",
        "Resnet",
        "respawn",
        "restartkernel",
        "ribeyes",
        "Rica",
        "roadmap",
        "Rogaine",
        "Rothberg",
        "roundtables",
        "rtlsdr",
        "runcurrentcell",
        "Sami",
        "Sarkisyan",
        "Sarteneja",
        "Sbarro",
        "scatterplot",
        "Schermata",
        "Schiefelbein",
        "Schitt's",
        "scikit",
        "scipy",
        "seaborn",
        "seagrass",
        "seagrasses",
        "SELU",
        "semidefinite",
        "sensei",
        "sheesh",
        "Shhh",
        "showlegend",
        "showscale",
        "silico",
        "sklearn",
        "socio",
        "Soderbergh",
        "softmax",
        "spearmanr",
        "sqeuclidean",
        "squirrely",
        "ssdna",
        "STFU",
        "strategize",
        "struct",
        "textbf",
        "thot",
        "timecodes",
        "timeseries",
        "timespan",
        "TINKS",
        "TINNITIS",
        "todense",
        "torchvision",
        "transcriptome",
        "transcriptomic",
        "treehouses",
        "Triaging",
        "Tubi",
        "twinx",
        "uhhh",
        "unbandaged",
        "uncentered",
        "upvotes",
        "usize",
        "violinplot",
        "virtualenv",
        "virtualenvs",
        "vlog",
        "vloggers",
        "vmap",
        "weirded",
        "Whataburger",
        "Winklevoss",
        "wirelessly",
        "Woot",
        "xaxes",
        "xaxis",
        "xgboost",
        "xlabel",
        "xticks",
        "yaxes",
        "yaxis",
        "ylabel",
        "YOUTUBER",
        "youtubers",
        "zipline",
        "Zuckerberg"
    ],
    // "python.linting.flake8Enabled": true,
    "python.linting.mypyEnabled": true,
    "python.linting.flake8Args": [
        "--ignore=E501"
    ],
    "jupyter.widgetScriptSources": [
        "jsdelivr.com",
        "unpkg.com"
    ],
    "jupyter.askForKernelRestart": false,
    "cSpell.enabled": true,
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook",
        "*.xls": "default"
    },
    // "remote.extensionKind": {
    //     "iocave.customize-ui": [
    //         "ui"
    //     ],
    //     "iocave.monkey-patch": [
    //         "ui"
    //     ]
    // },
    "projectManager.git.baseFolders": [
        "/home/cyniphile/projects/",
        "/Users/luke/projects/"
    ],
    "workbench.startupEditor": "newUntitledFile",
    "python.analysis.typeCheckingMode": "basic",
    "git.autofetch": true,
    "editor.rulers": [
        79,
        120
    ],
    "settingsSync.ignoredExtensions": [],
    "python.venvPath": "/home/cyniphile/.cache/pypoetry/virtualenvs/",
    "editor.tabSize": 4,
    "editor.insertSpaces": false,
    "python.formatting.provider": "black",
    "[python]": {
        "editor.insertSpaces": true,
        "editor.tabSize": 4,
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
    },
    "editor.cursorStyle": "line",
    "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "markdown.preview.breaks": true,
    "workbench.enableExperiments": false,
    "emmet.includeLanguages": {
        "rescript": "javascriptreact"
    },
    "[rescript]": {
        "editor.autoClosingBrackets": "always"
    },
    "rust-analyzer.checkOnSave.command": "clippy",
    "rust-analyzer.procMacro.enable": false,
    "rust-analyzer.diagnostics.disabled": [
        "macro-error",
        "unresolved-macro-call"
    ],
    "notebook.lineNumbers": "on",
    "search.useGlobalIgnoreFiles": true,
    "editor.fontFamily": "MesloLGS NF, Menlo, Monaco, 'Courier New', monospace",
    "terminal.integrated.fontFamily": "MesloLGS NF",
    "workbench.editor.untitled.hint": "hidden",
    "terminal.integrated.showExitAlert": false,
    "git.confirmSync": false,
    "notebook.output.textLineLimit": 50,
    "editor.bracketPairColorization.enabled": true,
    "jupyter.debugJustMyCode": false,
    "fountain.general.parentheticalNewLineHelper": false,
    "workbench.colorTheme": "Seoul Dark",
    "workbench.colorCustomizations": {
        "tab.inactiveBackground": "#393939",
        "tab.activeBackground": "#282828",
        "editorGroupHeader.tabsBackground": "#242424",
        "editorGutter.background": "#2a2a2a",
        "sideBar.background": "#282828",
        "editor.background": "#282828",
        "terminal.background": "#282828",
        "menu.selectionBackground": "#737272"
    },
    "editor.accessibilitySupport": "off",
    "projectManager.git.maxDepthRecursion": 1,
    "vim.showMarksInGutter": true,
    "editor.showFoldingControls": "always",
    "mypy.runUsingActiveInterpreter": true,
    "editor.guides.bracketPairs": true,
    "markdown.extension.print.theme": "dark",
    "debug.allowBreakpointsEverywhere": true,
    "debug.console.acceptSuggestionOnEnter": "on",
    "debug.terminal.clearBeforeReusing": true,
    "terminal.integrated.commandsToSkipShell": [
        "-workbench.action.quickOpen"
    ],
    "python.analysis.autoImportCompletions": true,
    "python.analysis.completeFunctionParens": true,
    "python.analysis.diagnosticMode": "workspace",
    "debug.internalConsoleOptions": "openOnSessionStart",
    "cSpell.enableFiletypes": [
        "Log",
        "csv",
        "diff",
        "excel",
        "fountain",
        "log",
        "markdown-math",
        "pip-requirements",
        "r",
        "search-result",
        "sql",
        "ssh_config",
        "toml",
        "vimrc"
    ],
    "debug.console.lineHeight": 15,
    "debug.console.closeOnEnd": true,
    "github.gitProtocol": "ssh",
    "workbench.activityBar.visible": false,
    "workbench.layoutControl.enabled": false,
    "fountain.pdf.printProfile": "usletter",
    "fountain.general.refreshStatisticsOnSave": true,
    "fountain.pdf.sceneContinuationBottom": true,
    "fountain.pdf.sceneContinuationTop": true,
    "grammarly.files.include": [
        "**/*.md",
        "**/*.txt",
        "**/*.tex",
    ],
    "terminal.integrated.enableBell": true,
    "editor.minimap.enabled": false,
    "fountain.general.refreshPdfPreviewOnSave": false,
    "jupyter.interactiveWindow.codeLens.enableGotoCell": false,
    "fountain.pdf.createBookmarks": false,
    "fountain.pdf.invisibleSectionBookmarks": false,
    "markdown-pdf.displayHeaderFooter": false,
    "editor.inlineSuggest.enabled": true,
    "github.copilot.enable": {
        "quarto": false,
        "*": true
    }
}